<!DOCTYPE html>
<html>

<head>
  <title>Playoff Tracker 2024</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- Latest compiled and minified CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
    crossorigin="anonymous"></script>

<style>
  .sor-col { background: #fff7a8; }
  .psor-col { background: #add8e6; }
</style>

<style>
  .mobile-note {
    display: none;
    font-style: italic;
    color: #666;
    margin: 0.5rem 0;
  }

  @media (max-width: 768px) {
    .mobile-note { display: block; }
    table { display: none !important; }
    #rankingsTable { display: table !important; width: 100%; }
    #rankingsTable th, #rankingsTable td { display: none; }
    #rankingsTable th:nth-child(1), #rankingsTable td:nth-child(1),
    #rankingsTable th:nth-child(2), #rankingsTable td:nth-child(2),
    #rankingsTable th:nth-child(3), #rankingsTable td:nth-child(3),
    #rankingsTable th:nth-child(5), #rankingsTable td:nth-child(5) {
      display: table-cell;
    }
  }
</style>

<style>
  .dropdown-menu.seasons-menu,
  #seasonsDropdown + .dropdown-menu {
    max-height: 70vh !important;
    overflow-y: auto !important;
    -webkit-overflow-scrolling: touch !important;
    overscroll-behavior: contain !important;
    touch-action: pan-y !important;
  }
  .dropdown-menu.seasons-menu .dropdown-item { white-space: nowrap; }

  @media (max-width: 768px) {
    .team-schedule-title { display: none !important; }
  }
  @media (max-width: 768px) {
    #rankingsTable th.col-power-sor,
    #rankingsTable td.col-power-sor { display: table-cell !important;background: #add8e6 }
  }
</style>
</head>

<body>
  <header>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-white fixed-top">
      <div class="container-fluid">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarExample01" aria-controls="navbarExample01" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>
        <div class="collapse navbar-collapse" id="navbarExample01">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item active">
              <a class="nav-link" aria-current="page" href="/teams?year=<%= new Date().getFullYear() %>">Home</a>
            </li>

            <!-- Seasons Dropdown -->
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle"
              href="#"
              id="seasonsDropdown"
              role="button"
              data-bs-toggle="dropdown"
              data-bs-auto-close="outside"
              data-bs-display="static">
             Seasons
           </a>
              <ul class="dropdown-menu seasons-menu" aria-labelledby="seasonsDropdown">
                <% 
                  const currentYear = new Date().getFullYear();
                  for (let y = currentYear; y >= 1900; y--) { 
                %>
                  <li>
                    <a class="dropdown-item" href="/teams?year=<%= y %>">
                      <%= y %>
                    </a>
                  </li>
                <% } %>
              </ul>
            </li>
          </ul>
        </div>
      </div>
    </nav>
    <!-- Navbar -->
  </header>

  <div class="container-md">
    <div class="row text-center" style="display:flex; flex-wrap: wrap">
      <div class="container" style="margin-top: 80px;">
        <div class="row">

          <%
          // Helper functions and PASS 1 + PASS 2 go here...
          %>

<!-- Rankings header will be filled by client-side script -->
<h2 id="asOfHeader">Rankings as of ...</h2>
<p class="mobile-note">(For more data, open website on a computer.)</p>

<div class="d-flex justify-content-end mt-2 mb-3">
  <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#glossaryCollapse" aria-expanded="false" aria-controls="glossaryCollapse">
    Glossary
  </button>
</div>
<div class="collapse" id="glossaryCollapse">
  <div class="card card-body text-start">
    <dl class="row mb-0">
      <dt class="col-sm-3">Rank</dt>
      <dd class="col-sm-9">Ordering based on <strong>Power SoR Avg</strong> (higher is better), with ties sharing a rank.</dd>

      <dt class="col-sm-3">Team</dt>
      <dd class="col-sm-9">FBS teams detected from the season schedule.</dd>

      <dt class="col-sm-3">Record</dt>
      <dd class="col-sm-9">Wins–Losses through completed games.</dd>

      <dt class="col-sm-3">Quality Score</dt>
      <dd class="col-sm-9">+1.35 for P5 win, -0.5 for P5 loss, +1.0 for FBS win, -1.0 for FBS loss, 0.0 for FCS win, -2.0 for FCS loss.</dd>

      <dt class="col-sm-3">Strength of Record</dt>
      <dd class="col-sm-9">
        How a team did versus an opponent's total accumulated quality score.
        <ul>
          <li>Win home/neutral: 1 + (OQS × 10%).</li>
          <li>Win home/neutral by &gt;10: 1 + (OQS × 12%).</li>
          <li>Win on the road by ≤10: 1 + (OQS × 23%).</li>
          <li>Win on the road by &gt;10: 1 + (OQS × 25%).</li>
          <li>Any win vs negative OQS: 1 + (OQS × 10%).</li>
          <li>Loss vs non-negative OQS by ≤7 (home/neutral): -1 + (OQS × 10%).</li>
          <li>Loss vs non-negative OQS by ≤7 (trueAway): -1 + (OQS × 12%).</li>
          <li>Loss by &gt;7 or vs negative OQS: -1 + (OQS × 6%).</li>
          <li>Championship win: 1 + (OQS × 30%).</li>
          <li>Championship loss: current Strength of Record × 0.90.</li>
        </ul>
      </dd>
    </dl>
  </div>
</div>

<script>
// Fill in the rankings timestamp using user's local timezone
document.addEventListener("DOMContentLoaded", () => {
  const d = new Date();
  const options = { 
    year: 'numeric', month: '2-digit', day: '2-digit',
    hour: 'numeric', minute: '2-digit', hour12: true,
    timeZoneName: 'short'
  };
  const str = d.toLocaleString(undefined, options);
  document.getElementById("asOfHeader").textContent = "Rankings as of " + str;
});
</script>

</body>
</html>
